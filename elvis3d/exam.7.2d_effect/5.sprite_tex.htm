<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>sprite text</title>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1,maximum-scale=1.0, user-scalable=no">

    <title>canvas texturing</title>

    <script src='../libs/threejs/three.js'></script>
    <script src="../libs/threejs/js/controls/OrbitControls.js"></script>
    <script src="../libs/elvis5/core.js"></script>

</head>
<body style="margin: 0px;" >

<script>

    /*
     참고 : https://gist.github.com/ekeneijeoma/1186920
     */
    //매니져 생성
    var Smgr = new esparty.elvis3d.scene.SceneManager({
        camera : {
            fov : 45,
            far : 5000,
            near : 1,
            position : new THREE.Vector3(2, 5, 5),
            lookat : new THREE.Vector3()

        },
        renderer : {
            type : 'webgl',
            clear : {
                color : 0x000000,
                alpha : 0.5 //반투명칠하기
            }
        },
        setup : function() {

            var scope = this;

            //그리드헬퍼
            var helper =  new THREE.GridHelper( 3, 1 );
            helper.setColors(0x00ff00,0xff0000);
            this.scene.add(helper);

            var size = 48;
            var text ="hello canvas";
            var canvas = document.createElement("canvas");
            canvas.width = 512;
            canvas.height = 64;

            var context = canvas.getContext("2d");
            context.font = size + "pt Arial";
            context.textAlign = "center";
            context.textBaseline = "middle";
            context.fillStyle = "rgba(255,255,0,0.5)";
            context.fillText(text, canvas.width / 2, canvas.height / 2);
            context.strokeStyle = "black";

            var texture = new THREE.Texture(canvas);
            texture.needsUpdate = true;

            var material = new THREE.SpriteMaterial( { map: texture, color: 0xffffff } );
            material.map.needsUpdate = true;
            var sprite = new THREE.Sprite( material );

            sprite.position.set(0,0,0);
            var ratio = texture.image.height/texture.image.width;
            var scale = 10.0;
            sprite.scale.set(1 * scale,ratio * scale)
            scope.scene.add(sprite);



            //카메라의 현재 위치 기준으로 시작한다.
            var controls = new THREE.OrbitControls( this.camera,this.renderer.domElement );
            controls.target.set(0, 0, 0 ); //바라보는 위치
            controls.update();


        },
        event : {
            onWindowResize : function() {
                this.updateAll({
                    resize : {
                        width :  window.innerWidth,
                        height : window.innerHeight
                    }
                });
            },
            onUpdate : function(event) {
                var scope = this;
                //scope.mesh_bill.quaternion.copy(scope.camera.quaternion)

                this.updateAll();
            }
        }
    });



</script>

</body>
</html>